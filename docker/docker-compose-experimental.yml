version: '3.8'


services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "15672:15672" # RabbitMQ Management UI
      - "5672:5672"   # RabbitMQ server port
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - dragepust_network
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "-q", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
  consul:
    image: hashicorp/consul:1.19.2
    container_name: consul
    ports:
      - "8500:8500/udp"
      - "8500:8500"   # Consul HTTP API
    command: 'agent -dev -node=microExam -client=0.0.0.0 -log-level=ERROR'
    networks:
      - dragepust_network
  dicerollerservice:
    build:
      context: ../diceroller
      dockerfile: Dockerfile
    ports:
      - '8086:8086'
    environment:
      SPRING_PROFILES_ACTIVE: "docker"
    depends_on:
      - consul
      - rabbitmq
    networks:
      - dragepust_network
  messengerservice:
    build:
      context: ../messenger
      dockerfile: Dockerfile
    ports:
      - '8083:8083'
    environment:
      SPRING_PROFILES_ACTIVE: "docker"
    depends_on:
      - consul
      - rabbitmq
    networks:
      - dragepust_network
  playercharacterservice:
    build:
      context: ../playerCharacter
      dockerfile: Dockerfile
    ports:
      - '8081:8081'
    environment:
      SPRING_PROFILES_ACTIVE: "docker"
    depends_on:
      - consul
      - rabbitmq
    networks:
      - dragepust_network
  itemservice:
    build:
      context: ../items
      dockerfile: Dockerfile
    ports:
      - '8082:8082'
    environment:
      SPRING_PROFILES_ACTIVE: "docker"
    depends_on:
      - consul
      - rabbitmq
    networks:
      - dragepust_network
  campaignservice:
    build:
      context: ../campaign
      dockerfile: Dockerfile
    ports:
      - '8085:8085'
    environment:
      SPRING_PROFILES_ACTIVE: "docker"
    depends_on:
      - consul
      - rabbitmq
    networks:
      - dragepust_network
  apigateway:
    build:
      context: ../api-gateway
      dockerfile: Dockerfile
    ports:
      - '8087:8087'
    environment:
      SPRING_PROFILES_ACTIVE: "docker"
    depends_on:
      - consul
      - rabbitmq
    networks:
      - dragepust_network
  statsservice:
    build:
      context: ../stats
      dockerfile: Dockerfile
    ports:
      - '8089:8089'
    environment:
      SPRING_PROFILES_ACTIVE: "docker"
    depends_on:
      - consul
      - rabbitmq
    networks:
      - dragepust_network
  userservice:
    build:
      context: ../user
      dockerfile: Dockerfile
    ports:
      - '8084:8084'
    environment:
      SPRING_PROFILES_ACTIVE: "docker"
    depends_on:
      - consul
      - rabbitmq
    networks:
      - dragepust_network
networks:
  dragepust_network:
    driver: bridge